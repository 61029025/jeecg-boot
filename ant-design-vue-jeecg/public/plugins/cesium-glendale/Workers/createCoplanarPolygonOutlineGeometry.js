define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian3-e5933291","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./Matrix4-a018fd55","./RuntimeError-2109023a","./Cartesian2-b1f4b655","./Transforms-b0e569fa","./GeometryAttribute-95a2a7cd","./GeometryAttributes-4fcfcf40","./AttributeCompression-2d47cb6b","./GeometryPipeline-74a20bc7","./EncodedCartesian3-48cbf07c","./IndexDatatype-53503fee","./IntersectionTests-9d7ddacd","./Plane-6e6a4f39","./GeometryInstance-b7d38aff","./arrayRemoveDuplicates-ebc732b0","./EllipsoidTangentPlane-6d5e3584","./OrientedBoundingBox-028c2054","./CoplanarPolygonGeometryLibrary-cfd4f6f5","./ArcType-dc1c5aee","./EllipsoidRhumbLine-cdd4405f","./PolygonPipeline-51e31fad","./PolygonGeometryLibrary-c68295e8"],function(a,e,t,l,r,p,n,o,i,s,u,d,y,f,c,m,g,b,h,P,G,v,L,C,T,E,k){"use strict";function H(e){var t=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=k.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+1}H.fromPositions=function(e){return new H({polygonHierarchy:{positions:(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).positions}})},H.pack=function(e,t,r){return r=a.defaultValue(r,0),t[r=k.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r)]=e.packedLength,t};var w={polygonHierarchy:{}};return H.unpack=function(e,t,r){t=a.defaultValue(t,0);var n=k.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=n.startingIndex,delete n.startingIndex;var o=e[t];return a.defined(r)||(r=new H(w)),r._polygonHierarchy=n,r.packedLength=o,r},H.createGeometry=function(e){var t=e._polygonHierarchy,r=t.positions;if(!((r=P.arrayRemoveDuplicates(r,l.Cartesian3.equalsEpsilon,!0)).length<3)&&L.CoplanarPolygonGeometryLibrary.validOutline(r)){var n=k.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(t,!1);if(0!==n.length){for(var o=[],a=0;a<n.length;a++){var i=new h.GeometryInstance({geometry:function(e){for(var t=e.length,r=new Float64Array(3*t),n=m.IndexDatatype.createTypedArray(t,2*t),o=0,a=0,i=0;i<t;i++){var y=e[i];r[o++]=y.x,r[o++]=y.y,r[o++]=y.z,n[a++]=i,n[a++]=(i+1)%t}var c=new d.GeometryAttributes({position:new u.GeometryAttribute({componentDatatype:p.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:r})});return new u.Geometry({attributes:c,indices:n,primitiveType:u.PrimitiveType.LINES})}(n[a])});o.push(i)}var y=f.GeometryPipeline.combineInstances(o)[0],c=s.BoundingSphere.fromPoints(t.positions);return new u.Geometry({attributes:y.attributes,indices:y.indices,primitiveType:y.primitiveType,boundingSphere:c})}}},function(e,t){return a.defined(t)&&(e=H.unpack(e,t)),e._ellipsoid=i.Ellipsoid.clone(e._ellipsoid),H.createGeometry(e)}});
