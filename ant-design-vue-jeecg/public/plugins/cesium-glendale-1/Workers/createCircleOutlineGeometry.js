define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian3-e5933291","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./Cartesian2-062e3760","./Transforms-7e4f9763","./RuntimeError-2109023a","./GeometryAttribute-8f568314","./GeometryAttributes-4fcfcf40","./IndexDatatype-53503fee","./GeometryOffsetAttribute-7350d9af","./EllipseGeometryLibrary-599d1401","./EllipseOutlineGeometry-c77065bd"],function(n,e,i,l,t,r,s,o,a,u,c,d,m,p,y){"use strict";function f(e){var i=(e=n.defaultValue(e,n.defaultValue.EMPTY_OBJECT)).radius,t={center:e.center,semiMajorAxis:i,semiMinorAxis:i,ellipsoid:e.ellipsoid,height:e.height,extrudedHeight:e.extrudedHeight,granularity:e.granularity,numberOfVerticalLines:e.numberOfVerticalLines};this._ellipseGeometry=new y.EllipseOutlineGeometry(t),this._workerName="createCircleOutlineGeometry"}f.packedLength=y.EllipseOutlineGeometry.packedLength,f.pack=function(e,i,t){return y.EllipseOutlineGeometry.pack(e._ellipseGeometry,i,t)};var G=new y.EllipseOutlineGeometry({center:new l.Cartesian3,semiMajorAxis:1,semiMinorAxis:1}),_={center:new l.Cartesian3,radius:void 0,ellipsoid:s.Ellipsoid.clone(s.Ellipsoid.UNIT_SPHERE),height:void 0,extrudedHeight:void 0,granularity:void 0,numberOfVerticalLines:void 0,semiMajorAxis:void 0,semiMinorAxis:void 0};return f.unpack=function(e,i,t){var r=y.EllipseOutlineGeometry.unpack(e,i,G);return _.center=l.Cartesian3.clone(r._center,_.center),_.ellipsoid=s.Ellipsoid.clone(r._ellipsoid,_.ellipsoid),_.height=r._height,_.extrudedHeight=r._extrudedHeight,_.granularity=r._granularity,_.numberOfVerticalLines=r._numberOfVerticalLines,n.defined(t)?(_.semiMajorAxis=r._semiMajorAxis,_.semiMinorAxis=r._semiMinorAxis,t._ellipseGeometry=new y.EllipseOutlineGeometry(_),t):(_.radius=r._semiMajorAxis,new f(_))},f.createGeometry=function(e){return y.EllipseOutlineGeometry.createGeometry(e._ellipseGeometry)},function(e,i){return n.defined(i)&&(e=f.unpack(e,i)),e._ellipseGeometry._center=l.Cartesian3.clone(e._ellipseGeometry._center),e._ellipseGeometry._ellipsoid=s.Ellipsoid.clone(e._ellipseGeometry._ellipsoid),f.createGeometry(e)}});
